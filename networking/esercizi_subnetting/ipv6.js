function next_question(){var F=Math.floor(Math.random()*6+1);if(F==1){var q="Which of the following is a valid IPv6 address. Present your answer simply as the letter of the valid addres (e.g. 'A').<br>";var d=create_bad_ips();var w=Math.floor(Math.random()*3+1);d[w]=create_valid_ip();var C=["A","B","C","D"];q+="<b>A</b> "+d[0][0]+"<br>";q+="<b>B</b> "+d[1][0]+"<br>";q+="<b>C</b> "+d[2][0]+"<br>";q+="<b>D</b> "+d[3][0]+"<br>";var t=C[w];var r="There is only one valid IPv6 address:<br>";r+="<b>A</b> "+d[0][1]+"<br>";r+="<b>B</b> "+d[1][1]+"<br>";r+="<b>C</b> "+d[2][1]+"<br>";r+="<b>D</b> "+d[3][1]+"<br>"}else{if(F===2){var u=Math.floor(Math.random()*4+1);var q="Are the following two IP addresses in the same subnet? Answer either 'yes' or 'no'.<br>";if(u===1){if(Math.floor(Math.random()*2)===1){var b="2001:"+random_hex()+":"+random_hex()+":"+random_hex()+":"}else{var b="2001::"}q+=b+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+"<br>";q+=b+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+"<br>";var t="Yes"}else{if(u===2){if(Math.floor(Math.random()*2)===1){var y="2001:"+random_hex()+":"+random_hex()+":"}else{var y="2001::"}q+=y+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+"<br>";q+=y+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+"<br>";var t="No"}else{if(u===3){var A=random_hex();var z=random_hex();while(A==z){z=random_hex()}q+="2001:"+A+"::"+random_hex()+"<br>";q+="2001:"+z+"::"+random_hex()+"<br>";var t="No"}else{var A=random_hex();q+="2001:"+A+"::"+random_hex()+"<br>";q+="2001:"+A+"::"+random_hex()+"<br>";var t="Yes"}}}var r="In IPv6, the first 48 bits are used for the routing prefix and the next 16 bits are used for the subnet ID. Because of this, the first 64 bits (or four 16-bit blocks) must be the same for two addresses to be on the same subnet."}else{if(F===3){var p=Math.floor(Math.random()*3+1);if(p===1){var l=64;var v=Math.floor(Math.random()*14+48)}else{if(p===2){var l=56;var v=Math.floor(Math.random()*14+42)}else{var l=48;var v=Math.floor(Math.random()*14+32)}}var q="How many /"+l+"s are there in a /"+v+"?";var t=Math.pow(2,(l-v));var r="Just like IPv4 subnetting, IPv6 subnetting is done is binary. To see how many subnetting bits we have we simply find "+l+"-"+v+". Then we simply take 2 to the power of however many bits we are using and find our answer. To calculate the above question would be to take 2<sup>"+l+"-"+v+"</sup>="+t+". You may want to practice your <a href='twos.html'>powers of two</a>. <br> Because IPv6 has such a huge amount of possible addresses, you usually don't need to worry about the amount of hosts."}else{if(F===4){var C=["A","B","C","D"];var c=Math.floor(Math.random()*5);var w=choices(c);var q="Which of the following is a "+w[0]+" address?";var s=[];for(x=0;x<4;x++){var a=Math.floor(Math.random()*8);while(a==c){a=Math.floor(Math.random()*8)}s[x]=choices(a)[1]}var B=Math.floor(Math.random()*4);var t=C[B];s[B]=w[1];for(x=0;x<4;x++){q+="<br>"+C[x]+") "+s[x]}r="::1/128 is the loopback address<br>::FFFF:0:0/96 are the IPv4-mapped addresses.<br>fe80::/10 are the link-local unicast.<br>ff00::/8 are multicast addresses<br>fc00::/7 are Unique Local Addresses";q+="<br>For your answer select only the letter (e.g. 'B')."}else{if(F===5){var E=[];for(var x=0;x<6;x++){E[x]=(Math.floor(Math.random()*16)).toString(16)+(Math.floor(Math.random()*16)).toString(16)}var f=E[0];for(var x=1;x<6;x++){f+="-"+E[x]}var q="You have a device with a MAC address of "+f+". What will be the automatically generated link-local address? For your answer select the correct letter (i.e. 'A').";var g=parseInt(E[0],16).toString(2);while(g.length<8){g="0"+g}if(g[6]==1){g=g.substr(0,6)+"0"+g.substr(7)}else{g=g.substr(0,6)+"1"+g.substr(7)}g=parseInt(g,2).toString(16);var m=["fe80::"+E[0]+E[1]+":"+E[2]+E[3]+":"+E[4]+E[5],"2003::"+E[0]+E[1]+":"+E[2]+E[3]+":"+E[4]+E[5],"2001::"+E[0]+E[1]+":"+E[2]+"ff:fe"+E[3]+":"+E[4]+E[5],"fe80::"+E[0]+E[1]+":"+E[2]+"ff:fe"+E[3]+":"+E[4]+E[5],"ff02::"+E[0]+E[1]+":"+E[2]+"ff:fe"+E[3]+":"+E[4]+E[5],"fe80::"+g+E[1]+":"+E[2]+E[3]+":"+E[4]+E[5],"ff02::"+g+E[1]+":"+E[2]+"ff:fe"+E[3]+":"+E[4]+E[5],"2001::"+g+E[1]+":"+E[2]+"ff:fe"+E[3]+":"+E[4]+E[5],];var C=["A","B","C","D"];var o=[];for(var x=0;x<4;x++){var k=Math.floor(Math.random()*m.length);o[x]=m.splice(k,1)}var c=Math.floor(Math.random()*4);var t=C[c];o[c]="fe80::"+g+E[1]+":"+E[2]+"ff:fe"+E[3]+":"+E[4]+E[5];for(var x=0;x<4;x++){q+="<br>"+C[x]+") "+o[x]}var r="Every device will have a unique MAC address. Because of this the MAC address can be used to create a unique IPv6 address. 0xFFFE is inserted into the middle of the MAC address to create a 64-bit length address, and the 7th bit of the address is flipped. This address is then prepended with fe80::/64."}else{if(F===6){var h=[];for(x=0;x<8;x++){var D=Math.floor(Math.random()*3);switch(D){case 0:h[x]="0";if(x>5){h[(x-1)]="0"}break;case 1:h[x]=random_hex();break;case 2:h[x]=(Math.floor(Math.random()*255)+1).toString(16);break}}h=h.join(":");var e=formatipv6preferred(h);var n=expand(h);var D=Math.floor(Math.random()*2);if(D===0){var q="Fully expand the following IPv6 address: <b>"+e+"</b>";var t=n;var r="Add leading zeros to every 16-bet set less than 4 characters<br>Expand :: into 16-bit sets of zeros until you have eight 16-bit sets total."}else{var q="Contract the following IPv6 address: <b>"+n+"</b>";var t=e;var r="Remove leading zeros<br>Use :: on the longest set of  zeros possible, or on the leftmost set of zeros<br>Do not use :: on a single 16-bit set of zeros <br>IPv6 must be written in lowercase.<br>See <a href='http://tools.ietf.org/html/rfc5952'>RFC5952</a>"}}}}}}}document.getElementById("question").innerHTML=q;document.getElementById("answer").innerHTML=t;document.getElementById("answer").style.display="none";document.getElementById("answeris").style.display="none";document.getElementById("answeris").innerHTML="The correct answer is:";document.getElementById("solution").innerHTML=r;document.getElementById("solution").style.display="none";document.getElementById("input").value=""}next_question();function check_answer(){var a=document.getElementById("input").value.toUpperCase();var b=document.getElementById("answer").innerHTML.toUpperCase();a=a.replace(/^\s+|\s+$/g,"");b=b.replace(/^\s+|\s+$/g,"");if(a==b){document.getElementById("answeris").innerHTML="Yes! The correct answer is:";document.getElementById("answeris").style.display="block";document.getElementById("answer").style.display="block";document.getElementById("solution").style.display="block"}else{document.getElementById("answeris").innerHTML="That is not correct.";document.getElementById("answeris").style.display="block"}}function show_answer(){document.getElementById("answeris").innerHTML="The correct answer is:";document.getElementById("answeris").style.display="block";document.getElementById("answer").style.display="block";document.getElementById("solution").style.display="block"}function create_bad_ips(){var c=new Array();for(var b=0;b<4;b++){var a=Math.floor(Math.random()*5+1);if(a===1){c[b]=["2001:"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex(),"An IPv6 address is made up of eight 16-bit blocks, not six."]}else{if(a===2){c[b]=["2001:"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex(),"An IPv6 address is made up of eight 16-bit blocks, not nine."]}else{if(a===3){c[b]=["2001:"+random_hex()+"::"+random_hex()+"::"+random_hex()+":"+random_hex(),"A valid IPv6 address can use the shorthand :: only once."]}else{if(a===4){c[b]=["2001:"+(Math.floor(Math.random()*3000)+66000).toString(16)+"::"+random_hex(),"A valid IPv6 address is made up of 16-bit blocks, which are represented by up to four hexadecimal digits and cannot exceed the hex value 'ffff'."]}else{if(a===5){var d=["g","h","x","z"];c[b]=["2001:"+(Math.floor(Math.random()*4095)+1).toString(16)+d[Math.floor(Math.random()*d.length)]+"::"+random_hex(),"A valid IPv6 address uses hexadecimal values, which never go above 'f'."]}}}}}}return c}function random_hex(){return(Math.floor(Math.random()*65500)+1).toString(16)}function create_valid_ip(){var a=Math.floor(Math.random()*4)+1;if(a===1){var b=["2001:"+random_hex()+"::"+random_hex(),"This is valid"]}else{if(a===2){var b=["2001:"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex()+":"+random_hex(),"This is valid"]}else{if(a===3){var b=["2001:"+random_hex()+"::"+random_hex()+":"+random_hex()+":"+random_hex(),"This is valid"]}else{if(a===4){var b=["2001:"+random_hex()+"::"+random_hex(),"This is valid"]}}}}return b}function ipv4(){return Math.floor(Math.random()*200+10)}function choices(a){var b=[["Loopback","::1/128"],["Link Local Unicast","fe80::"+random_hex()+":"+random_hex()],["IPv4 mapped","::ffff:"+ipv4()+"."+ipv4()+"."+ipv4()+"."+ipv4()],["multicast","ff0"+((Math.floor(Math.random()*15+1)).toString(16))+"::"+random_hex()+":"+random_hex()],["Unique Local Addresses","fc00::"+random_hex()+":"+random_hex()],["nothing special","::"+random_hex()+":"+random_hex()],["nothing special","2003::"+random_hex()],["nothing","fa00::"+random_hex()+":"+random_hex()]];return b[a]}function checkipv6(a){return(/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))\s*$/.test(a))}function formatipv6preferred(e){var d;var b="Not a valid IPv6 Address";var c;var a;if(checkipv6(e)){d=e.toLowerCase();c=d.split(":");trimcolonsfromends(c);fillemptysegment(c);stripleadingzeroes(c);removeconsecutivezeroes(c);b=assemblebestrepresentation(c)}return b}function trimcolonsfromends(a){var b=a.length;if((a[0]=="")&&(a[1]=="")&&(a[2]=="")){a.shift();a.shift()}else{if((a[0]=="")&&(a[1]=="")){a.shift()}else{if((a[b-1]=="")&&(a[b-2]=="")){a.pop()}}}}function fillemptysegment(b){var c;var a=8;if(b[b.length-1].indexOf(".")!=-1){a=7}for(c=0;c<a;c++){if(b[c]==""){b[c]="0";break}}while(b.length<a){b.splice(c,0,"0")}}function stripleadingzeroes(a){var b=a.length;var c;for(i=0;i<b;i++){segs=a[i].split("");for(j=0;j<3;j++){if((segs[0]=="0")&&(segs.length>1)){segs.splice(0,1)}else{break}}a[i]=segs.join("")}}function removeconsecutivezeroes(d){var a=-1;var f=0;var c=false;var b=0;var g=-1;var e;for(e=0;e<8;e++){if(c){if(d[e]=="0"){b+=1}else{c=false;if(b>f){a=g;f=b}}}else{if(d[e]=="0"){c=true;g=e;b=1}}}if(b>f){a=g;f=b}if(f>1){d.splice(a,f,"")}}function assemblebestrepresentation(c){var a="";var b=c.length;if(c[0]==""){a=":"}for(i=0;i<b;i++){a=a+c[i];if(i==b-1){break}a=a+":"}if(c[b-1]==""){a=a+":"}return a}function expand(k){var a="";var h="";var e=8;var b=4;if(k.indexOf("::")==-1){a=k}else{var d=k.split("::");var g=0;for(var f=0;f<d.length;f++){g+=d[f].split(":").length}a+=d[0]+":";for(var f=0;f<e-g;f++){a+="0000:"}a+=d[1]}var c=a.split(":");for(var f=0;f<e;f++){while(c[f].length<b){c[f]="0"+c[f]}h+=(f!=e-1)?c[f]+":":c[f]}return h};
