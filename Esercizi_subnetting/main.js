function next_question(){var F=Math.floor(Math.random()*3+1),e="";var af=new Array();af[0]=255;var Q=new Array();for(al=0;al<4;al++){Q[al]=Math.floor(Math.random()*255+1)}if(F===1){var V="A";Q[0]=10;af[2]=0;af[3]=0;var a=Math.floor(Math.random()*8+8);af[1]=256-Math.pow(2,(32-(a+16)));var y=Math.pow(2,(a-8))}else{if(F===2){var V="B";Q[0]=172;Q[1]=Math.floor(Math.random()*15+16);af[1]=255;af[3]=0;var a=Math.floor(Math.random()*8+16);af[2]=256-Math.pow(2,(32-(a+8)));var y=Math.pow(2,(a-16))}else{var V="C";Q[0]=192;Q[1]=168;af[1]=255;af[2]=255;var a=Math.floor(Math.random()*7+24);af[3]=256-Math.pow(2,(32-a));var y=Math.pow(2,(a-24))}}var X=find_net_add(Q,af);var A=find_wildcard(af);var D=find_broadcast(A,Q);var W=find_hosts(a);if(document.getElementById("keep_question").checked==true&&document.getElementById("question_number").innerHTML){var P=parseInt(document.getElementById("question_number").innerHTML)}else{var P=Math.floor(Math.random()*23+1);document.getElementById("keep_question").checked=false}document.getElementById("question_number").innerHTML=P;if(P<9){document.getElementById("myCanvas").style.display="none"}else{document.getElementById("myCanvas").style.display="block"}if(P<9){if(P===1){var ai="What is the broadcast address of the network ";ai+=print_ip(Q);if(Math.floor(Math.random()*2+1)==1){ai+="/"+a}else{ai+=" &nbsp;&nbsp; "+print_ip(af)}var x=print_ip(D);e="The broadcast address is one less than the next network address. Count in block sizes. The block size is either 256 minus the netmask, or 2<sup>32-slash</sup>."}else{if(P===2){var ai="What is the last valid host on the network that ";ai+=print_ip(Q);if(Math.floor(Math.random()*2+1)==1){ai+="/"+a}else{ai+=" &nbsp;&nbsp; "+print_ip(af)}ai+=" is a part of?";var x=D[0]+"."+D[1]+"."+D[2]+"."+(D[3]-1);e="The last usable IP is one less than the broadcast. Find the next block, then subtract two from that."}else{if(P==3){var ai="What is the first valid host on the network that ";ai+=print_ip(Q);if(Math.floor(Math.random()*2+1)==1){ai+="/"+a}else{ai+=" &nbsp;&nbsp; "+print_ip(af)}ai+=" is a part of?";var x=X[0]+"."+X[1]+"."+X[2]+"."+(X[3]+1);e="The first usable host is one more than the network address. One way to find the network address is to convert the netmask and the IP address into <a href='binary.html'>binary</a> and preform the AND operation."}else{if(P===4){var ai="What is the slash notation for the subnet mask ";ai+=print_ip(af)+"? (e.g. /24)";var x="/"+a;e+="This will be 32-h where h is the number of host bits."}else{if(P===5){var ai="What is the subnet mask for a /";ai+=a+"?";var x=print_ip(af);e="32 - "+a+" is how many host bits there are. You can then use <a href='binary.html'>binary</a> to find the net-mask."}else{if(P===6){var ai="What is the maximum number of valid subnets one will have from the network ";ai+=print_ip(Q);if(Math.floor(Math.random()*2+1)===1){ai+="/"+a}else{ai+=" &nbsp;&nbsp;  "+print_ip(af)}ai+=". Assume this is a class "+V+" address.";var x=y;e+="There are 2<sup>x</sup> subnets in a network, where x is the number of borrowed subnet bits."}else{if(P===7){var ai="What is the maximum number of valid hosts one will have from the network ";ai+="192.168."+Math.floor(Math.random()*255+1)+".0";a=Math.floor(Math.random()*7+24);af=[255,255,255,256-Math.pow(2,(32-a))];if(Math.floor(Math.random()*2+1)==1){ai+="/"+a}else{ai+=" &nbsp;&nbsp;  "+print_ip(af)}var x=find_hosts(a);e+="There are 2<sup>h</sup>-2 usable hosts in a network, where h is the number of hot bits. "}else{if(P===8){var C=Math.floor(Math.random()*(Math.pow(2,(32-a-1)))+(Math.pow(2,(32-a-1)))-1);if(C==1){C=2}var ai="What is the most efficent subnet if you need "+C+" usable hosts on a subnet?";if(Math.floor(Math.random()*2+1)==1){ai+=" Answer in slash notation (e.g '/22').";var x="/"+a}else{ai+=" Present your answer as a subnet mask (e.g. 255.255.255.128).";var x=print_ip(af)}e+="Count the <a href='twos.html'>powers of two</a> until you find the first power of two which is above the needed amount of hosts. This is the amount of host bits you will need."}}}}}}}}}else{if(P<16){if(P===9||P===10){var a=Math.floor(Math.random()*6+25);Q[0]=192;Q[1]=168;Q[2]=Math.floor(Math.random()*255+1);Q[3]=find_random_hosts(a);af[0]=255;af[1]=255;af[2]=255;af[3]=256-Math.pow(2,(32-a));var X=find_net_add(Q,af);var A=find_wildcard(af);var D=find_broadcast(A,Q);var E=new Array();E[0]=Q[0];E[1]=Q[1];E[2]=Q[2];E[3]=D[3]+1+find_random_hosts(a);var c=find_random_hosts(a);var b=find_random_hosts(a);draw_canvas_one(c,b,Q,E,10);if(P===9){var ai="What is the subnet mask in use in this network?";var x=print_ip(af)}else{if(Math.floor(Math.random()*2+1)===1){var B=[192,168,(Q[2]),(find_random_hosts(a))];while(B[3]==Q[3]){B[3]=find_random_hosts(a)}B=print_ip(B);var x="A"}else{var B=[192,168,(Q[2]),(D[3]+1+find_random_hosts(a))];while(B[3]==E[3]){B[3]=D[3]+1+find_random_hosts(a)}B=print_ip(B);var x="B"}var ai="Which letter VLAN would the host "+B+" be placed? For your answer simply select the letter of the Vlan (i.e. 'A')";e+="Count the <a href='twos.html'>powers of two</a> until you find the first power of two which is above the needed amount of hosts for the larger network. This is the amount of host bits you will need."}}else{if(P===11){var g=[X];var I;for(var al=1;al<4;al++){g[al]=next_net_add(D);D=find_broadcast(A,g[al]);I=g[al]&g[al-1]}var ai="Enter the smallest summary route which would include all of the given subnets. Please present your answer in slash notation (i.e. 10.1.1.0/8).";var h=a-2;var o=find_mask(h);var ak=find_net_add(g[0],o);var R=find_wildcard(o);var J=find_broadcast(R,g[0]);while(J[0]<D[0]||J[1]<D[1]||J[2]<D[2]||J[3]<D[3]){h=h-1;o=find_mask(h);ak=find_net_add(g[0],o);R=find_wildcard(o);J=find_broadcast(R,g[0])}var x=print_ip(ak)+"/"+h;var s=print_ip(g[0])+"/"+a;var r=print_ip(g[1])+"/"+a;var q=print_ip(g[2])+"/"+a;var p=print_ip(g[3])+"/"+a;e="Remember to check where the bits of each address fall. Sometimes two /24s do not fit into a single /23, instead one sits in one /23 and the other sits in a following /23. For example, 192.168.1.0/24 and 192.168.2.0/24 do not fit into a single /23. The first is half of 192.168.0.0/23 and the second is half of 192.168.2.0/23. To check your calculations, feel free to use the <a href='vlsm.html'>VLSM calculator</a>.";draw_canvas_two(s,r,q,p)}else{if(P==12||P==13){var W=new Array();for(var al=0;al<5;al++){var K=Math.floor(Math.random()*126)+1;W[al]=[K,find_slash(K)]}W[4][0]=2;W[4][1]=[30];W=W.sort(function(ap,i){return i[0]-ap[0]});var N=[[192,168,0,0]];var L=[];var w=[];var ah=[];var l=[];var Y=0;for(var al=0;al<5;al++){Y+=(Math.pow(2,(32-W[al][1])));L[al]=find_mask(W[al][1]);l[al]=find_net_add(N[al],L[al]);w[al]=find_wildcard(L[al]);ah[al]=find_broadcast(w[al],N[al]);N[al+1]=next_net_add(ah[al])}var z=Math.floor(Math.random()*5);var k=find_slash(Y);if(P==12){var x=print_ip(l[z])+"/"+W[z][1];l[z]=["xxx","xxx","xxx","xxx"];W[z][1]="xx";var ai="What is the network address and subnet mask (in CIDR noration) of the hidden (xxx.xxx.xxx.xxx/xx) subnet? The whole network has a network address and subnet mask of 192.168.0.0/"+k;e+="The block size for a subnet is 256-subnet mask value. Start at zero and count in block sizes. Every block size will be a new network address. Find the block size of the highest subnet and see what the next block will be."}else{if(P==13){var x=Math.pow(2,(32-W[z][1]))-2;W[z][0]="XX";var ai="Up to how many hosts can be placed in the subnet which currently reads 'XX' hosts?";e="There are 2h-2 usable hosts in a network, where h is the number of hot bits."}}for(var al=0;al<5;al++){l[al]=print_ip(l[al])+"/"+W[al][1]}draw_canvas_three(l[0],l[1],l[2],l[3],l[4],W[0][0],W[1][0],W[2][0],W[3][0],W[4][0])}else{if(P==14){var ae=[];for(var al=0;al<4;al++){ae[al]=Math.floor(Math.random()*244)+1}var af=[255,255,255,252];ae=find_net_add(ae,af);if(Math.floor(Math.random()*2+1)==1){ae[3]++;var n=print_ip(ae);ae[3]++;var x=print_ip(ae)}else{ae[3]=ae[3]+2;var n=print_ip(ae);ae[3]--;var x=print_ip(ae)}var ai="Given the following point to point (/30) network, what is the IP address of the unknown router (labeled xxx.xxx.xxx.xxx)?";e="Remember a /30 has a block size of 4, with two of those addresses being the network address and the broadcast. There are only two usable IPs per /30.";draw_canvas_four(n)}else{if(P==15){var H=[Math.floor(Math.random()*5+25),Math.floor(Math.random()*5+25)];H=H.sort(function(ap,i){return ap-i});var Z=[192,168,Math.floor(Math.random()*200),Math.floor(Math.random()*254)+1];var L=[find_mask(H[0]),find_mask(H[1])];var ad=find_net_add(Z,L[0]);var aj=find_wildcard(L[0]);var O=find_broadcast(aj,Z);var ab=next_net_add(O);var ag=find_wildcard(L[1]);var M=find_broadcast(ag,ab);var ai="The following shows a network with two subnets. A device on the network is misconfigured. Select the letter of the device which has a an invalid IP address. Your answer should simply be the letter of the deivce (i.e. A).";e="Find the block size and make sure that all the IPs fall within that block size. Then check to make sure no broadcast and network addresses are being assigned to hosts. Remember, the usable hosts are those between the broadcast and the network addresses.";var g=[ad[3]+1,find_random_oct(ad[3],O[3]),find_random_oct(ad[3],O[3]),find_random_oct(ad[3],O[3])];while(g[0]==g[1]){g[1]=find_random_oct(ad[3],O[3])}while(g[1]==g[2]||g[0]==g[2]){g[2]=find_random_oct(ad[3],O[3])}while(g[2]==g[3]||g[1]==g[3]||g[0]==g[3]){g[3]=find_random_oct(ad[3],O[3])}var f=[ab[3]+1,find_random_oct(ab[3],M[3]),find_random_oct(ab[3],M[3]),find_random_oct(ab[3],M[3])];while(f[0]==f[1]){f[1]=find_random_oct(ab[3],M[3])}while(f[1]==f[2]||f[0]==f[2]){f[2]=find_random_oct(ab[3],M[3])}while(f[2]==f[3]||f[1]==f[3]||f[0]==f[3]){f[3]=find_random_oct(ab[3],M[3])}t=["A","B","C","D","A","E","F","G"];change=Math.floor(Math.random()*8);x=t[change];if(change==0){g[change]=ad[3]}else{if(change<4){if(Math.floor(Math.random()*2+1)<1){g[change]=ad[3]}else{g[change]=O[3]}}else{if(change==4){f[change-4]=ab[3]}else{if(Math.floor(Math.random()*2+1)<1){f[change-4]=ab[3]}else{f[change-4]=M[3]}}}}draw_canvas_five(g,f,ad,ab,H[0],H[1])}}}}}}else{if(P==16){x=Math.floor(Math.random()*8+2);ai="How many subnets are needed for the following topology?";e="A router divides broadcast domains. Unless otherwise stated, a port on a router can usually be thought of as a separate subnet.";draw_canvas_six(x)}else{if(P==17){var aa=Math.floor(Math.random()*8+8);a=Math.floor(Math.random()*8+8);while(a==aa){aa=Math.floor(Math.random()*8+8)}var ao=print_ip(find_mask(aa));if(Math.floor(Math.random()*2+1)==1){var ai="Which of the following contains more host bits? For your answer simply write 'A' or 'B'.";if(a>aa){var x="B"}else{var x="A"}}else{var ai="Which of the following contains more network bits? For your answer simply write 'A' or 'B'.";var e="Convert the CIDR and the network mask into binary, and from there see which has more 1's.";if(a<aa){var x="B"}else{var x="A"}}draw_canvas_one("","",a,ao,17)}else{if(P==18){var W=new Array();for(var al=0;al<5;al++){var K=Math.floor(Math.random()*100)+1;W[al]=[K,find_slash(K)]}W=W.sort(function(ap,i){return i[0]-ap[0]});var N=[[192,168,0,0]];var L=[];var w=[];var ah=[];var l=[];var Y=0;for(var al=0;al<5;al++){Y+=(Math.pow(2,(32-W[al][1])));L[al]=find_mask(W[al][1]);l[al]=find_net_add(N[al],L[al]);w[al]=find_wildcard(L[al]);ah[al]=find_broadcast(w[al],N[al]);N[al+1]=next_net_add(ah[al])}var ai="The following shows a '<a href='router_on_stick.html'>router on a stick</a>' scenario. Given the partial <b>show run</b>  command information from the router:<p><em>";ai+="interface FastEthernet1/1.2<br>";ai+="encapsulation dot1Q 2<br>ip address "+print_ip(next_net_add(l[0]))+" "+print_ip(L[0])+"</p><p>";ai+="interface FastEthernet1/1.3<br>";ai+="encapsulation dot1Q 3<br>ip address "+print_ip(next_net_add(l[1]))+" "+print_ip(L[1])+"</p><p>";ai+="interface FastEthernet1/1.4<br>";ai+="encapsulation dot1Q 4<br>ip address "+print_ip(next_net_add(l[2]))+" "+print_ip(L[2])+"</p></em><p>";ai+="You plan to add two new VLANS: VLAN 5 and VLAN 6. VLAN 5 should support "+W[3][0]+" hosts, while VLAN 6 should support "+W[4][0]+" hosts. Which of the following answers makes sense. For your answer simply give the letter of the correct choice (e.g. 'A').<p>";e="Make sure the subnet mask provides a large enough block for the  needed hosts. Once you find the needed netmask, make sure that the possible IP address is not within any of the previously existing networks.";var T=new Array;for(al=0;al<4;al++){var m=Math.floor(Math.random()*5+1);if(m==1){T[al]="192.168.0."+find_random_oct(l[0][3],ah[0][3])+" "+print_ip(L[3])+" on Fa1/1.5<br>"}else{if(m==2){T[al]=l[1][0]+"."+l[1][1]+"."+l[1][2]+"."+find_random_oct(l[1][3],ah[1][3])+" "+print_ip(L[3])+" on Fa1/1.5<br>"}else{if(m==3){T[al]=l[2][0]+"."+l[2][1]+"."+l[2][2]+"."+find_random_oct(l[2][3],ah[2][3])+" "+print_ip(L[3])+" on Fa1/1.5<br>"}else{if(m==4){T[al]=l[2][0]+"."+l[2][1]+"."+l[2][2]+"."+find_random_oct(l[2][3],ah[2][3])+" "+print_ip(L[4])+" on Fa1/1.6<br>"}else{if(m==5){T[al]=l[1][0]+"."+l[1][1]+"."+l[1][2]+"."+find_random_oct(l[1][3],ah[1][3])+" "+print_ip(L[4])+" on Fa1/1.6<br>"}}}}}}var am=Math.floor(Math.random()*4);if(Math.floor(Math.random()*2+1)==1){T[am]=print_ip(next_net_add(l[3]))+" "+print_ip(L[3])+" on Fa1/1.5<br>"}else{T[am]=print_ip(next_net_add(l[4]))+" "+print_ip(L[4])+" on Fa1/1.6<br>"}ai+="A) "+T[0];ai+="B) "+T[1];ai+="C) "+T[2];ai+="D) "+T[3];var U=["A","B","C","D"];var x=U[am];draw_canvas_seven()}else{if(P==19){var W=new Array();for(var al=0;al<3;al++){var K=Math.floor(Math.random()*100)+1;W[al]=[K,find_slash(K)]}W=W.sort(function(ap,i){return i[0]-ap[0]});var N=[[192,168,0,0]];var L=[];var w=[];var ah=[];var l=[];var Y=0;var S=[];var ai="Using the diagram below, which of the following IP addresses would be valid to asign to interface Fa0/3? For your answer type out the IP address.<br>";e="See which IP fits outside the currently existing subnets.";for(var al=0;al<3;al++){L[al]=find_mask(W[al][1]);l[al]=find_net_add(N[al],L[al]);w[al]=find_wildcard(L[al]);ah[al]=find_broadcast(w[al],N[al]);N[al+1]=next_net_add(ah[al]);S[al]=l[al].slice(0);S[al][3]=find_random_oct(l[al][3],ah[al][3]);ai+=print_ip(S[al])+"<br>"}var ac=Math.floor(Math.random()*3+1);if(ac==1){var x=print_ip(S[1]);var v=l[0].slice(0);v[3]=find_random_oct(l[0][3],ah[0][3]);v=print_ip(v);net_a=print_ip(l[0]);mask_a=print_ip(L[0]);var u=l[2].slice(0);u[3]=find_random_oct(l[2][3],ah[2][3]);u=print_ip(u);net_b=print_ip(l[2]);mask_b=print_ip(L[2])}else{if(ac==2){var x=print_ip(S[2]);var v=l[1].slice(0);v[3]=find_random_oct(l[1][3],ah[1][3]);v=print_ip(v);net_a=print_ip(l[1]);mask_a=print_ip(L[1]);var u=l[0].slice(0);u[3]=find_random_oct(l[0][3],ah[0][3]);u=print_ip(u);net_b=print_ip(l[0]);mask_b=print_ip(L[0])}else{var x=print_ip(S[0]);var v=l[1].slice(0);v[3]=find_random_oct(l[1][3],ah[1][3]);v=print_ip(v);mask_a=print_ip(L[1]);net_a=print_ip(l[1]);var u=l[2].slice(0);u[3]=find_random_oct(l[2][3],ah[2][3]);u=print_ip(u);net_b=print_ip(l[2]);mask_b=print_ip(L[2])}}draw_canvas_eight(v,u,net_a,net_b,mask_a,mask_b,"?.?.?.?","XXX")}else{if(P==20){var N=[[192,168,Math.floor(Math.random()*256),0]];var an=[];var L=[];var w=[];var ah=[];var l=[];var W=[];var Y=0;for(var al=0;al<3;al++){var K=Math.floor(Math.random()*90)+1;W[al]=[K,find_slash(K)];Y+=(Math.pow(2,(32-W[al][1])))}W=W.sort(function(ap,i){return i[0]-ap[0]});for(var al=0;al<3;al++){an[al]=find_mask(W[al][1]);l[al]=find_net_add(N[al],an[al]);w[al]=find_wildcard(an[al]);ah[al]=find_broadcast(w[al],N[al]);N[al+1]=next_net_add(ah[al]);l[al]=print_ip(l[al]);L[al]=print_ip(an[al])}var d=W[2][0];var ai="You have a subnetwork, "+print_ip(N[0])+"/24. It is divided into subnet A and subnet B. Your boss wants to add a third subnet, C, with "+d+" hosts. Is this possible? If yes, provide the network address of the new subnet you will be adding (i.e. 192.168.2.14). If it is not possible, type 'no' as your answer.";draw_canvas_eight("","",l[0],l[1],L[0],L[1],"","XXX");var x=l[2];e="Calculate how much space subnet A and B take up. To calculate how many ip addresses a subnet takes up, look at the network mask. In this case we are working in the last octet. Subtract the netmask value of the last octet from 256 to find how many IPs each subnet mask uses. For example, subnet A uses 256-"+an[0][3]+"="+(256-an[0][3])+" IP addresses. Do the same for subnet B, to get "+(256-an[1][3])+" IPs.<p>";e+="Knowing how many IPs we have used up, we need to find how many we need. We need "+d+" hosts. We need to find a block size minus two which will fit our needed hosts. That block size is how many IPs we need. In this case we need "+(256-an[2][3])+" IP addresses.";if(Y>256){var x="No";e+=" In this case we cannot fit that many IPs into the remaining space of the /24"}e+="<p>The network address for subnet C would be the first IP of the next block for the netmask of subnet B, In this case "+l[2]}else{if(P==21){var W=new Array();for(var al=0;al<3;al++){var K=Math.floor(Math.random()*126)+1;W[al]=[K,find_slash(K)]}W=W.sort(function(ap,i){return i[0]-ap[0]});var N=[[Math.floor(Math.random()*200+10),Math.floor(Math.random()*200+10),Math.floor(Math.random()*50),0]];var L=[],w=[],ah=[],l=[];for(var al=0;al<3;al++){L[al]=find_mask(W[al][1]);l[al]=find_net_add(N[al],L[al]);w[al]=find_wildcard(L[al]);ah[al]=find_broadcast(w[al],N[al]);N[al+1]=next_net_add(ah[al])}var z=Math.floor(Math.random()*3),t=["A","B","C"],G=[l[z][0],l[z][1],l[z][2],find_random_oct(l[z][3],ah[z][3])];x=l[z];var ai="Given the network diagram below, and the results of the <b>sh ip route</b> command, on which interface will the destination IP address "+print_ip(G)+" be found? For your answer simply enter the corresponding letter (i.e. A).<br>";ai+="A) Fa0/1<br>B) Fa0/2<br>C) Fa0/3";ai+="<p><pre>router# <b>sh ip route</b><br>";ai+="Codes: L - local, C - connected<br>[output cut]</pre>";for(var al=0;al<3;al++){var j=Math.floor(Math.random()*l.length);ai+="<pre>C	"+print_ip(l[j])+"/"+W[j][1]+" is directly connected, FastEthernet0/"+(al+1)+"</pre>";ai+="<pre>L	"+print_ip(next_net_add(l[j]))+"/32 is directly connected, FastEthernet0/"+(al+1)+"</pre>";if(x==l[j]){x=t[al]}W.splice(j,1);l.splice(j,1)}draw_canvas_eight("","","","","","","","");var e="There are 2h-2 usable hosts in a network, where h is the number of host bits. Find the usable hosts in each block until you find block which holds the given IP"}else{if(P===22){var g=[X];var I;for(var al=1;al<4;al++){g[al]=next_net_add(D);D=find_broadcast(A,g[al]);I=g[al]&g[al-1]}var ai="Enter the wildcard mask for the given subnets (i.e. 0.0.0.255).";var x=print_ip(A);var s=print_ip(g[0])+"/"+a;var r=print_ip(g[1])+"/"+a;var q=print_ip(g[2])+"/"+a;var p=print_ip(g[3])+"/"+a;e="A wildcard is an inverted subnet mask. For example, a subnet mask of 255.255.255.0 has a wildcard mask of 0.0.0.255. The binary bits are inverted. This is useful for things such as OSPF routing.";draw_canvas_two(s,r,q,p)}else{if(P===23){var ai="You want to create a new access list (ACL) on your Cisco router to block Subnet A from reaching Subnet B. The command you will use is <pre>access-list 10 deny Y.Y.Y.Y X.X.X.X</pre> where <pre>Y.Y.Y.Y</pre> is the network address of Subnet A and <pre>X.X.X.X</pre> is the wildcard mask of Subnet A. Subnet A has "+W+" hosts meaning it is a /"+a+" and contains the IP address "+print_ip(Q)+". For your answer enter the network address followed by the wildcard mask of Subnet A (e.g. '192.168.1.0 0.0.0.255').";var x=print_ip(X)+" "+print_ip(A);var e="The block size for a subnet is 256-subnet mask value. Start at zero and count in block sizes. Every block size will be a new network address. A wildcard is going to one less than the block size for the octet you are working with. So for a block size of 64, a wildcard will be 0.0.0.63. As another example, a /18 has a block size of 64 in the third octet, so the wildcard will be 0.0.63.255.";draw_canvas_eight("","",print_ip(Q)+"/"+a,"","","","","")}}}}}}}}}}document.getElementById("question").innerHTML=ai;document.getElementById("answer").innerHTML=x;document.getElementById("answer").style.display="none";document.getElementById("solution").innerHTML=e;document.getElementById("solution").style.display="none";document.getElementById("answeris").style.display="none";document.getElementById("answeris").innerHTML="The correct answer is:";document.getElementById("input").value=""}next_question();function check_answer(){var a=document.getElementById("input").value.toUpperCase();var b=document.getElementById("answer").innerHTML.toUpperCase();a=a.replace(/\s+/g,"");b=b.replace(/\s+/g,"");if(a==b){document.getElementById("answeris").innerHTML="Yes! The correct answer is:";document.getElementById("answeris").style.display="block";document.getElementById("answer").style.display="block";document.getElementById("solution").style.display="block"}else{document.getElementById("answeris").innerHTML="That is not correct.";document.getElementById("answeris").style.display="block"}}function show_answer(){document.getElementById("answeris").innerHTML="The correct answer is:";document.getElementById("answeris").style.display="block";document.getElementById("answer").style.display="block";document.getElementById("solution").style.display="block"}function find_net_add(a,b){var c=new Array();for(var d=0;d<4;d++){c[d]=a[d]&b[d]}return c}function find_hosts(a){return(Math.pow(2,(32-a))-2)}function find_wildcard(a){var c=new Array();for(var b=0;b<4;b++){c[b]=255-a[b]}return c}function find_broadcast(b,a){var d=new Array();for(var c=0;c<4;c++){d[c]=b[c]|parseInt(a[c])}return d}function find_random_hosts(a){return Math.floor(Math.random()*(Math.pow(2,(32-a-1)))+(Math.pow(2,(32-a-1)))-1)}function draw_canvas_one(l,k,m,s,r){var f=document.getElementById("myCanvas");var d=f.getContext("2d");var h=90;var g=3*(f.width/4);var e=h;var n=f.height-h;var p=f.width/2;var o=f.height/2;var b=f.width/4;var a=f.height/2;var c=8;d.clearRect(0,0,f.width,f.height);d.beginPath();d.arc(g,e,h,0,2*Math.PI);d.fillStyle="LightGreen";d.fill();d.beginPath();d.moveTo(g,e);d.lineTo(p,o);d.lineWidth=c;d.strokeStyle="LightGreen";d.stroke();d.beginPath();d.arc(g,n,h,0,2*Math.PI);d.fillStyle="LightBlue";d.fill();d.beginPath();d.moveTo(g,n);d.lineTo(p,o);d.lineWidth=c;d.strokeStyle="LightBlue";d.stroke();d.beginPath();d.moveTo(p,o);d.lineTo(b,a);d.lineWidth=c;d.strokeStyle="DarkSeaGreen";d.stroke();var i=new Image();i.onload=function(){d.drawImage(i,g-(h/2),e-(h/2));d.drawImage(i,g-(h/2),n-(h/2))};i.src="images/workstation.png";var j=new Image();j.onload=function(){d.drawImage(j,p-40,o-30)};j.src="images/switch.png";var q=new Image();q.onload=function(){d.drawImage(q,b-40,a-40)};q.src="images/router.png";d.fillStyle="Black";d.font="bold 16px Arial";d.fillText("VLAN A",g-24,e-70);d.fillText("VLAN B",g-24,n-70);if(r==10){d.fillText(l+" hosts",g-24,e-50);d.fillText(k+" hosts",g-24,n-50);d.fillText(m[0]+"."+m[1]+"."+m[2]+"."+m[3],g-58,e+60);d.fillText(s[0]+"."+s[1]+"."+s[2]+"."+s[3],g-58,n+60)}else{d.fillText("Prefix Size:",g-40,e+60);d.fillText("/"+m,g-25,e+80);d.fillText("Network Mask:",g-60,n+50);d.fillText(s,g-40,n+70)}}function next_net_add(b){var a=b.slice(0);if(a[3]<255){a[3]++}else{if(a[2]<255){a[3]=0;a[2]++}else{if(a[1]<255){a[3]=0;a[2]=0;a[1]++}else{a[3]=0;a[2]=0;a[1]=0;a[0]++}}}return a}function find_mask(c){var a=new Array();for(var b=0;b<4;b++){a[b]=0}if(c<8){a[0]=256-Math.pow(2,(32-(c+24)))}else{if(c<16){a[0]=255;a[1]=256-Math.pow(2,(32-(c+16)))}else{if(c<24){a[0]=255;a[1]=255;a[2]=256-Math.pow(2,(32-(c+8)))}else{a[0]=255;a[1]=255;a[2]=255;a[3]=256-Math.pow(2,(32-c))}}}return a}function print_ip(a){return a[0]+"."+a[1]+"."+a[2]+"."+a[3]}function draw_canvas_two(i,g,e,c){var h=document.getElementById("myCanvas");var d=h.getContext("2d");var j=300;var b=150;var o=40;var n=h.width/3;var m=h.height/2;var a=8;var f=h.width/7;d.clearRect(0,0,h.width,h.height);d.beginPath();d.moveTo(j+6,(h.height/2)+(o/2));d.lineTo(n,m);d.moveTo(j+6,(h.height/5)+(o/2));d.lineTo(n,m);d.moveTo(j+6,(h.height/3)+(o/2));d.lineTo(n,m);d.moveTo(j+6,(3*h.height/4)+(o/2));d.lineTo(n,m);d.lineWidth=a;d.strokeStyle="gold";d.stroke();d.beginPath();d.moveTo(n,m);d.lineTo(f,m);d.lineWidth=a;d.strokeStyle="GoldenRod";d.stroke();var l=new Image();l.onload=function(){d.drawImage(l,j-40,h.height/5-5,60,60);d.drawImage(l,j-40,h.height/2-5,60,60);d.drawImage(l,j-40,h.height/3-5,60,60);d.drawImage(l,j-40,3*h.height/4-5,60,60)};l.src="images/switch.png";var k=new Image();k.onload=function(){d.drawImage(k,n-40,m-30,60,60);d.drawImage(k,f-40,m-30,60,60)};k.src="images/router.png";d.fillStyle="Black";d.font="bold 16px Arial";d.fillText("Router A",f-50,m+30);d.fillText("Router B",n-40,m+30);d.fillText(i,j+20,h.height/5+20);d.fillText(g,j+20,h.height/2+20);d.fillText(e,j+20,h.height/3+20);d.fillText(c,j+20,3*h.height/4+20)}function find_slash(a){for(var b=2;b<33;b++){if(a<=(Math.pow(2,b)-2)){return 32-b}}}function draw_canvas_three(n,l,k,j,i,s,q,p,o,m){var e=document.getElementById("myCanvas");var c=e.getContext("2d");var b=8;var h=35;var d=430;var f=e.width/3;var r=2*e.width/3;var v=e.height/5;var u=4*e.height/5;var a=e.height/2;c.clearRect(0,0,e.width,e.height);c.beginPath();c.moveTo(h,v);c.lineTo(f,v);c.lineTo(f,a);c.lineTo(r,a);c.lineTo(r,v);c.lineTo(d,v);c.moveTo(h,u);c.lineTo(f,u);c.lineTo(f,a);c.moveTo(d,u);c.lineTo(r,u);c.lineTo(r,a);c.lineWidth=b;c.strokeStyle="grey";c.stroke();var t=new Image();t.onload=function(){c.drawImage(t,f-40,a-40,80,80);c.drawImage(t,r-40,a-40,80,80)};t.src="images/router.png";var g=new Image();g.onload=function(){c.drawImage(g,h-30,v-30,60,60);c.drawImage(g,h-30,u-30,60,60);c.drawImage(g,d-30,v-30,60,60);c.drawImage(g,d-30,u-30,60,60)};g.src="images/switch.png";c.fillStyle="Black";c.font="bold 16px Arial";c.fillText(s+" Hosts",h,v+35);c.fillText(n,h,v-35);c.fillText(q+" Hosts",d-100,v+35);c.fillText(l,d-100,v-35);c.fillText(m+" Hosts",r-100,a+35);c.fillText(i,r-140,a-35);c.fillText(p+" Hosts",d-100,u+35);c.fillText(k,d-100,u-35);c.fillText(o+" Hosts",h,u+35);c.fillText(j,h,u-35)}function draw_canvas_four(a){var c=document.getElementById("myCanvas");var e=c.getContext("2d");var b=8;var d=2*c.width/3;var f=c.width/3;var h=c.height/2;e.clearRect(0,0,c.width,c.height);e.beginPath();e.moveTo(d,h);e.lineTo(f,h);e.lineWidth=b;e.strokeStyle="Blue";e.stroke();var g=new Image();g.onload=function(){e.drawImage(g,d-40,h-40,80,80);e.drawImage(g,f-40,h-40,80,80)};g.src="images/router.png";e.fillStyle="Black";e.font="bold 16px Arial";e.fillText(a,d,h+35);e.fillText("xxx.xxx.xxx.xxx",f-86,h+35)}function draw_canvas_five(h,f,r,q,k,i){var j=document.getElementById("myCanvas");var e=j.getContext("2d");var d=8;var n=j.width*4/5;var t=j.width*2/5;var c=j.width/5;var b=j.height/2;var o=j.height/3;var v=j.height*2/3;var a=j.height/5;var p=j.height*2/5;var g=j.height*3/5;var s=j.height*4/5;e.clearRect(0,0,j.width,j.height);e.beginPath();e.moveTo(n,a);e.lineTo(t,o);e.lineTo(n,p);e.moveTo(t,o);e.lineTo(c,b);e.lineWidth=d;e.strokeStyle="Red";e.stroke();e.beginPath();e.moveTo(n,g);e.lineTo(t,v);e.lineTo(c,b);e.moveTo(t,v);e.lineTo(n,s);e.lineWidth=d;e.strokeStyle="Orange";e.stroke();var u=new Image();u.onload=function(){e.drawImage(u,c-40,b-40,80,80)};u.src="images/router.png";var m=new Image();m.onload=function(){e.drawImage(m,t-30,o-30,60,60);e.drawImage(m,t-30,v-30,60,60)};m.src="images/switch.png";var l=new Image();l.onload=function(){e.drawImage(l,n-40,a-40,60,60);e.drawImage(l,n-40,p-40,60,60);e.drawImage(l,n-40,g-40,60,60);e.drawImage(l,n-40,s-40,60,60)};l.src="images/workstation.png";e.fillStyle="Black";e.font="bold 16px Arial";e.fillText("."+h[0],c+10,b-30);e.fillText("."+h[1],t-30,o-40);e.fillText("."+h[2],n-30,a-40);e.fillText("."+h[3],n-30,p-40);e.fillText("."+f[0],c+10,b+40);e.fillText("."+f[1],t-30,v-40);e.fillText("."+f[2],n-30,g-40);e.fillText("."+f[3],n-30,s-40);e.font="bold 19px Arial";e.fillText("A",c-45,b);e.fillText("B",t-45,o);e.fillText("C",n+30,a-20);e.fillText("D",n+30,p-20);e.fillText("E",t-45,v+7);e.fillText("F",n+30,g-20);e.fillText("G",n+30,s-20);e.fillText(print_ip(r)+"/"+k,130,50);e.fillText(print_ip(q)+"/"+i,130,350)}function find_random_oct(a,b){return Math.floor(Math.random()*((b-1)-(a+1)+1))+(a+1)}function draw_canvas_six(i){var c=document.getElementById("myCanvas");var b=c.getContext("2d");var a=8;var h=c.height/3;var l=2*c.height/3;var n=c.width/3;var o=c.width*2/3;var f=30;b.clearRect(0,0,c.width,c.height);b.beginPath();b.moveTo(f,h);b.lineTo(c.width-f,h);b.moveTo(n,f);b.lineTo(n,c.height-f);b.moveTo(o,f);b.lineTo(o,c.height-f);if(i==6){b.moveTo(c.width/2,f);b.lineTo(c.width/2,h)}b.lineWidth=a;b.strokeStyle="Navy";b.stroke();var k=0;var e=3;var j=new Image();j.onload=d;j.src="images/router.png";var m=new Image();m.onload=d;m.src="images/switch.png";var g=new Image();g.onload=d;g.src="images/workstation.png";function d(){k+=1;if(k>=e){if(i<4){b.drawImage(m,n-20,h-20,40,40);b.drawImage(m,o-20,h-20,40,40)}if(i==2){b.drawImage(j,c.width/2-30,h-30,60,60)}else{if(i==3){b.drawImage(j,c.width/2,h-30,60,60);b.drawImage(j,c.width/2-60,h-30,60,60)}else{if(i>3&&i<10){b.drawImage(j,n-30,h-30,60,60);b.drawImage(m,n-20,h-60,40,40);b.drawImage(m,n-80,h-20,40,40);b.drawImage(m,n-20,h+100,40,40);if(i<7){b.drawImage(m,o-20,h-20,40,40)}else{b.drawImage(j,o-30,h-30,60,60);b.drawImage(m,o-20,h-60,40,40);if(i<8){b.drawImage(m,o-20,h+60,40,40)}b.drawImage(m,o+30,h-20,40,40)}if(i!=4&&i!=7&&i!=9){b.drawImage(j,c.width/2-30,h-30,60,60);b.drawImage(m,o-20,l-60,40,40)}if(i==6){b.drawImage(m,c.width/2-20,f+30,40,40);b.drawImage(g,c.width/2-20,f-20,40,40)}if(i==9){b.drawImage(j,o-30,l-40,60,60);b.drawImage(j,n-30,l-90,60,60);b.drawImage(m,o-20,l+20,40,40)}}}}b.drawImage(g,n-20,f-20,40,40);b.drawImage(g,o-20,f-20,40,40);b.drawImage(g,n-20,c.height-f-20,40,40);b.drawImage(g,o-20,c.height-f-20,40,40);b.drawImage(g,f-20,h-20,40,40);b.drawImage(g,c.width-f-20,h-20,40,40);if(i<2&&i<6){}}}}function draw_canvas_seven(){var d=document.getElementById("myCanvas");var c=d.getContext("2d");var a=8;var n=d.width/2;var m=d.height/9;var f=d.height/3;var b=4*d.height/5;var o=d.width/5;var l=d.width/2;var k=4*d.width/5;var g=45;c.clearRect(0,0,d.width,d.height);var e=2;var i=0;c.beginPath();c.moveTo(n+40,m+20);c.lineTo(n+30,f+20);c.lineTo(o,b);c.moveTo(n+30,f+20);c.lineTo(l,b);c.moveTo(n+30,f+20);c.lineTo(k,b);c.lineWidth=a;c.strokeStyle="Silver";c.stroke();c.beginPath();c.arc(o,b,g,0,2*Math.PI);c.fillStyle="Orange";c.fill();c.beginPath();c.arc(l,b,g,0,2*Math.PI);c.fillStyle="Orange";c.fill();c.beginPath();c.arc(k,b,g,0,2*Math.PI);c.fillStyle="Orange";c.fill();c.font="bold 19px Arial";c.fillStyle="Black";c.fillText("VLAN 2",o-35,b+10);c.fillText("VLAN 3",l-35,b+10);c.fillText("VLAN 4",k-35,b+10);c.font="12px Arial";c.fillText("Fa1/1",n+10,f);c.fillText("Fa1/2",n-30,f+40);c.fillText("Fa1/3",n,f+70);c.fillText("Fa1/4",n+60,f+40);var h=new Image();h.onload=function(){c.drawImage(h,n,m,80,80)};h.src="images/router.png";var j=new Image();j.onload=function(){c.drawImage(j,n,f,60,60)};j.src="images/switch.png"}function draw_canvas_eight(g,f,s,p,q,n,l,k){var h=document.getElementById("myCanvas");var e=h.getContext("2d");var d=8;var c=h.width/2;var b=h.height/2;var a=h.height/5;var r=h.width/6;var o=h.width/2;var m=5*h.width/6;var i=80;e.clearRect(0,0,h.width,h.height);e.beginPath();e.arc(r,b,i,0,2*Math.PI);e.fillStyle="Yellow";e.fill();e.beginPath();e.arc(o,a,i,0,2*Math.PI);e.fillStyle="Yellow";e.fill();e.beginPath();e.arc(m,b,i,0,2*Math.PI);e.fillStyle="Yellow";e.fill();e.beginPath();e.moveTo(c,b);e.lineTo(r,b);e.moveTo(c,b);e.lineTo(o,a);e.moveTo(c,b);e.lineTo(m,b);e.lineWidth=d;e.strokeStyle="Yellow";e.stroke();var t=new Image();t.onload=function(){e.drawImage(t,c-35,b-30,80,80)};t.src="images/router.png";e.font="bold 16px Arial";e.fillStyle="Black";e.fillText("Subnet C",40,a+70);e.fillText("Subnet A",c-30,a-60);e.fillText("Subnet B",360,a+50);e.fillText("Fa0/1",c-20,b-40);e.fillText("Fa0/2",c+60,b+10);e.fillText("Fa0/3",c-80,b+10);e.font="16px Arial";e.fillText(g,c-30,b-20);e.fillText(f,c+40,b+30);e.fillText(l,c-80,b+30);e.fillText(k,60,a+90);e.fillText(s,c-40,a-45);e.fillText(p,350,a+70);e.fillText(q,c-50,a-30);e.fillText(n,340,a+90);var j=new Image();j.onload=function(){e.drawImage(j,r-30,b-20,60,60);e.drawImage(j,o-30,a-20,60,60);e.drawImage(j,m-20,b-20,60,60)};j.src="images/workstation.png"};